@using Microsoft.AspNet.Identity
@model KakRaboti.Models.ManageUserViewModel

@{
    ViewBag.Title = "Смяна на паролата";
}

<div class="user-register-form">
    <h2>@ViewBag.Title</h2>
    <div class="row">
        <div class="col-md-8">
            <section id="loginForm">
                @using (Html.BeginForm("Manage", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @if (ViewData.ModelState["OldPassword"] == null || ViewData.ModelState["OldPassword"].Errors.Count() < 1)
                        {
                            @Html.LabelFor(model => model.OldPassword, new { @class = "form-label" })
                            <div>
                                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control" })
                            </div>
                        }
                        else
                        {
                            @Html.LabelFor(model => model.OldPassword, new { @class = "form-label invalid", @title = ViewData.ModelState["OldPassword"].Errors.First().ErrorMessage })<text><span style="color: red;">*</span>&nbsp;&nbsp;</text>
                            <div>
                                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control invalid" })
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        @if (ViewData.ModelState["NewPassword"] == null || ViewData.ModelState["NewPassword"].Errors.Count() < 1)
                        {
                            @Html.LabelFor(model => model.NewPassword, new { @class = "form-label" })
                            <div>
                                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                            </div>
                        }
                        else
                        {
                            @Html.LabelFor(model => model.NewPassword, new { @class = "form-label invalid", @title = ViewData.ModelState["NewPassword"].Errors.First().ErrorMessage })<text><span style="color: red;">*</span>&nbsp;&nbsp;</text>
                            <div>
                                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control invalid" })
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        @if (ViewData.ModelState["ConfirmPassword"] == null || ViewData.ModelState["ConfirmPassword"].Errors.Count() < 1)
                        {
                            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label" })
                            <div>
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                            </div>
                        }
                        else
                        {
                            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label invalid", @title = ViewData.ModelState["ConfirmPassword"].Errors.First().ErrorMessage })<text><span style="color: red;">*</span>&nbsp;&nbsp;</text>
                            <div>
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control invalid" })
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        <div>
                            <input type="submit" value="Смяна на паролата" />
                        </div>
                    </div>

                }
            </section>
        </div>

    </div>
</div>

